language: cpp

matrix:
 include:
  - os: linux
    dist: trusty
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=57

before_install:
  - if [[ "$QT_BASE" = "48" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt487-trusty -y; fi
  - if [[ "$QT_BASE" = "51" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt511-trusty -y; fi
  - if [[ "$QT_BASE" = "52" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y; fi
  - if [[ "$QT_BASE" = "53" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y; fi
  - if [[ "$QT_BASE" = "54" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y; fi
  - if [[ "$QT_BASE" = "55" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi
  - if [[ "$QT_BASE" = "56" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y; fi
  - if [[ "$QT_BASE" = "57" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt571-trusty -y; fi
  - if [[ "$QT_BASE" = "58" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt58-trusty  -y; fi
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt596-trusty -y; fi
  - if [[ "$QT_BASE" = "510" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      sudo apt-get update -qq;
    else
      brew update;
    fi

install:
  - if [ "$QT_BASE" = "48" ]; then sudo apt-get --allow-unauthenticated install -qq opt-qt4-qmake opt-qt4-dev-tools; source /opt/qt-4.8/bin/qt-4.8-env.sh; fi
  - if [ "$QT_BASE" = "51" ]; then sudo apt-get install -qq qt51base; source /opt/qt51/bin/qt51-env.sh; fi
  - if [ "$QT_BASE" = "52" ]; then sudo apt-get install -qq qt52base; source /opt/qt52/bin/qt52-env.sh; fi
  - if [ "$QT_BASE" = "53" ]; then sudo apt-get install -qq qt53base; source /opt/qt53/bin/qt53-env.sh; fi
  - if [ "$QT_BASE" = "54" ]; then sudo apt-get install -qq qt54base; source /opt/qt54/bin/qt54-env.sh; fi
  - if [ "$QT_BASE" = "55" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
        sudo apt-get install -qq qt55base; source /opt/qt55/bin/qt55-env.sh; 
      else
        brew install qt55;
        brew link --force qt55;
      fi
    fi
  - if [ "$QT_BASE" = "56" ]; then sudo apt-get install -qq qt56base; source /opt/qt56/bin/qt56-env.sh; fi
  - if [ "$QT_BASE" = "57" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
        sudo apt-get --allow-unauthenticated install -qq qt57base libqt5opengl5-dev; source /opt/qt57/bin/qt57-env.sh; 
      else
        brew install qt5;
        brew link --force qt5;
      fi
    fi
  - if [ "$QT_BASE" = "58" ]; then sudo apt-get install -qq qt58base; source /opt/qt58/bin/qt58-env.sh; fi
  - if [ "$QT_BASE" = "59" ]; then sudo apt-get install -qq qt59base; source /opt/qt59/bin/qt59-env.sh; fi
  - if [ "$QT_BASE" = "510" ]; then sudo apt-get install -qq qt510base; source /opt/qt510/bin/qt510-env.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then 
      wget https://github.com/leozide/leocad/releases/download/v0.83.2/Library-Linux-9306.zip -O library.bin;
    fi

script:
  - qmake PREFIX=/usr -v
  - qmake PREFIX=/usr -r
  - make -j4
  - if [ "$TRAVIS_OS_NAME" != "linux" ] ; then exit 0 ; fi
  - make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" 
  - chmod a+x linuxdeployqt*.AppImage 
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt*.AppImage ./appdir/usr/bin/leocad -bundle-non-qt-libs -verbose=2
  - cp appdir/usr/share/applications/leocad.desktop appdir/ ### WHY IS THIS NEEDED???
  # ./linuxdeployqt*.AppImage ./appdir/usr/bin/leocad -appimage -verbose=2
  - tar cfvz appdir.tar.gz appdir/
  - wget -c https://github.com/AppImage/AppImageKit/releases/download/11/appimagetool-x86_64.AppImage
  - chmod +x ./appimagetool-x86_64.AppImage
  - ./appimagetool-x86_64.AppImage appdir/
  - curl --upload-file ./appdir.tar.gz https://transfer.sh/appdir.tar.gz 
  
